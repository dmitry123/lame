#include "Assembler.h"

LAME_BEGIN2(Script)

Void Assembler::_Set(Uint8 code, StringC name, Uint8 arguments) {

	this->asmArray[code].code = code;
	this->asmArray[code].name = name;
	this->asmArray[code].args = arguments;
}

Void Assembler::_Defaults() {

	_Set(NOOP, "noop", 0);
	_Set(RCONST0, "rconst0", 0);
	_Set(ICONST0, "iconst0", 0);
	_Set(ICONST1, "iconst1", 0);
	_Set(LCONST0, "lconst0", 0);
	_Set(LCONST1, "lconst1", 0);
	_Set(FCONST0, "fconst0", 0);
	_Set(FCONST1, "fconst1", 0);
	_Set(DCONST0, "dconst0", 0);
	_Set(DCONST1, "dconst1", 0);
	_Set(IALOAD, "iaload", 1);
	_Set(LALOAD, "laload", 1);
	_Set(FALOAD, "faload", 1);
	_Set(DALOAD, "daload", 1);
	_Set(RALOAD, "raload", 1);
	_Set(BALOAD, "baload", 1);
	_Set(CALOAD, "caload", 1);
	_Set(SALOAD, "saload", 1);
	_Set(IASTORE, "iastore", 1);
	_Set(LASTORE, "lastore", 1);
	_Set(FASTORE, "fastore", 1);
	_Set(DASTORE, "dastore", 1);
	_Set(RASTORE, "rastore", 1);
	_Set(BASTORE, "bastore", 1);
	_Set(CASTORE, "castore", 1);
	_Set(SASTORE, "sastore", 1);
	_Set(POP, "pop", 0);
	_Set(POP2, "pop2", 0);
	_Set(DUP, "dup", 0);
	_Set(DUP2, "dup2", 0);
	_Set(RDUP, "rdup", 0);
	_Set(XCHG, "xchg", 0);
	_Set(IADD, "iadd", 0);
	_Set(LADD, "ladd", 0);
	_Set(FADD, "fadd", 0);
	_Set(DADD, "dadd", 0);
	_Set(ISUB, "isub", 0);
	_Set(LSUB, "lsub", 0);
	_Set(FSUB, "fsub", 0);
	_Set(DSUB, "dsub", 0);
	_Set(IMUL, "imul", 0);
	_Set(LMUL, "lmul", 0);
	_Set(FMUL, "fmul", 0);
	_Set(DMUL, "dmul", 0);
	_Set(IDIV, "idiv", 0);
	_Set(LDIV, "ldiv", 0);
	_Set(FDIV, "fdiv", 0);
	_Set(DDIV, "ddiv", 0);
	_Set(IMOD, "imod", 0);
	_Set(LMOD, "lmod", 0);
	_Set(FMOD, "fmod", 0);
	_Set(DMOD, "dmod", 0);
	_Set(INEG, "ineg", 0);
	_Set(LNEG, "lneg", 0);
	_Set(FNEG, "fneg", 0);
	_Set(DNEG, "dneg", 0);
	_Set(ISHL, "ishl", 0);
	_Set(LSHL, "lshl", 0);
	_Set(ISHR, "ishr", 0);
	_Set(LSHR, "lshr", 0);
	_Set(IUSHR, "uishr", 0);
	_Set(LUSHR, "lushr", 0);
	_Set(IAND, "iand", 0);
	_Set(LAND, "land", 0);
	_Set(IOR, "ior", 0);
	_Set(LOR, "lor", 0);
	_Set(IXOR, "ixor", 0);
	_Set(LXOR, "ixor", 0);
	_Set(ITL, "itl", 0);
	_Set(ITF, "itf", 0);
	_Set(ITD, "itd", 0);
	_Set(LTI, "lti", 0);
	_Set(LTF, "ltf", 0);
	_Set(LTD, "ltd", 0);
	_Set(FTI, "fti", 0);
	_Set(FTL, "ftl", 0);
	_Set(FTD, "ftd", 0);
	_Set(DTI, "dti", 0);
	_Set(DTL, "dtl", 0);
	_Set(DTF, "dtf", 0);
	_Set(ITB, "itb", 0);
	_Set(ITC, "itc", 0);
	_Set(ITS, "its", 0);
	_Set(ICLD, "icld", 1);
	_Set(ICMP, "icmp", 0);
	_Set(LCMP, "lcmp", 0);
	_Set(FCMP, "fcmp", 0);
	_Set(DCMP, "dcmp", 0);
	_Set(IRET, "iret", 0);
	_Set(LRET, "lret", 0);
	_Set(FRET, "fret", 0);
	_Set(DRET, "dret", 0);
	_Set(RRET, "rret", 0);
	_Set(LEAVE, "leave", 0);
	_Set(ALENGTH, "alength", 0);
	_Set(THROW, "throw", 0);
	_Set(SYNCE, "synce", 0);
	_Set(SYNCQ, "syncq", 0);
	_Set(DBG, "dbg", 0);
	_Set(ANEW, "anew", 1);
	_Set(BIPUSH, "bipush", 1);
	_Set(LDC, "ldc", 1);
	_Set(LDC16, "ldc16", 1);
	_Set(LDC32, "ldc32", 1);
	_Set(RLOAD, "rload", 1);
	_Set(ILOAD, "iload", 1);
	_Set(LLOAD, "lload", 1);
	_Set(FLOAD, "fload", 1);
	_Set(DLOAD, "dload", 1);
	_Set(ALOAD, "aload", 1);
	_Set(ISTORE, "istore", 1);
	_Set(LSTORE, "lstore", 1);
	_Set(FSTORE, "fstore", 1);
	_Set(DSTORE, "dstore", 1);
	_Set(RSTORE, "rstore", 1);
	_Set(JE, "je", 1);
	_Set(JNE, "jne", 1);
	_Set(JB, "jb", 1);
	_Set(JNB, "jnb", 1);
	_Set(JNBE, "jnbe", 1);
	_Set(JAE, "jae", 1);
	_Set(JNAE, "jnae", 1);
	_Set(JA, "ja", 1);
	_Set(JNA, "jna", 1);
	_Set(ICMPJE, "icmpje", 1);
	_Set(ICMPJNE, "icmpjne", 1);
	_Set(ICMPJB, "impcjb", 1);
	_Set(ICMPJNB, "icmpjnb", 1);
	_Set(ICMPJAE, "icmpjae", 1);
	_Set(ICMPJNAE, "icmpjnae", 1);
	_Set(ICMPJA, "icmpja", 1);
	_Set(ICMPJNA, "icmpjna", 1);
	_Set(RCMPJE, "rcmpje", 1);
	_Set(RCMPJNE, "rcmpjne", 1);
	_Set(JUMP, "jump", 1);
	_Set(JZ, "jz", 1);
	_Set(JNZ, "jnz", 1);
	_Set(SIPUSH, "sipush", 1);
	_Set(IINC, "iinc", 1);
	_Set(IDEC, "idec", 1);
	_Set(IINC, "linc", 1);
	_Set(IDEC, "ldec", 1);
	_Set(RNEW, "rnew", 1);
	_Set(ARNEW, "arnew", 1);
	_Set(INSTANCEOF, "instanceof", 1);
	_Set(CALL, "call", 1);
	_Set(IRLOAD, "irload", 1);
	_Set(LRLOAD, "lrload", 1);
	_Set(FRLOAD, "frload", 1);
	_Set(DRLOAD, "drload", 1);
	_Set(RRLOAD, "rrload", 1);
	_Set(BRLOAD, "brload", 1);
	_Set(CRLOAD, "crload", 1);
	_Set(SRLOAD, "srload", 1);
	_Set(IRSTORE, "irstore", 1);
	_Set(LRSTORE, "lrstore", 1);
	_Set(FRSTORE, "frstore", 1);
	_Set(DRSTORE, "drstore", 1);
	_Set(RRSTORE, "rrstore", 1);
	_Set(BRSTORE, "brstore", 1);
	_Set(CRSTORE, "crstore", 1);
	_Set(SRSTORE, "srstore", 1);
}

AssemblerPtr Assembler::instance
	= new Assembler();

LAME_END2